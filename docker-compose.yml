version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - elastic_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes  
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
    ports:
      - "29092:29092"
    networks:
      - elastic_network

  elasticsearch:
    image: elasticsearch:7.17.5
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    networks:
      - elastic_network

  kibana:
    image: kibana:7.17.5
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elastic_network

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=TrafficCluster
    ports:
      - "9042:9042"
    networks:
      - elastic_network

  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - elastic_network

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scraper
    working_dir: /app
    depends_on:
      - kafka
    networks:
      - elastic_network
    environment:
      - KAFKA_BROKER=kafka:29092
      - NODE_ENV=production
      - PUPPETEER_SKIP_DOWNLOAD=true 
    volumes:
      - .:/app

networks:
  elastic_network:
    driver: bridge
